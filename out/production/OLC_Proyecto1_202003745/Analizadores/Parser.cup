// ------------  Paquete e importaciones ------------
package Analizadores;

import java_cup.runtime.*;


//------> Codigo para el parser
//------> Declaracion de variables, funciones y funciones de error

parser code 
{:
    public void syntax_error(Symbol s)
    {
            System.err.println("Error Sintactico: "+ s.value + " - Fila: " + s.right + " - Columna: " + s.left + ". Recuperado" );
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {
            System.err.println("Error Sintactico: "+ s.value + " - Fila: " + s.right + " - Columna: " + s.left + ". Sin recuperacion." );
    }

:}


//------> Codigo para las acciones gramaticales (no tocar)
action code
{:  :}



//------> Declaración de terminales
terminal String MAIN, LLAVE_ABERTURA, VOID, PRINT, PARENTESIS_ABERTURA, PARENTESIS_CIERRE,
LLAVE_CIERRE, MAYOR_IGUAL, MENOR_IGUAL, DOBLE_IGUAL, DISTINTO, INT, DOUBLE, CHAR, BOOLEAN,
STRING, IF, IGUAL, ENTERO, PTOCOMA, VARIABLE, CARACTER, DECIMAL, SUMA, MENOS, MULT, DIVISION,UMENOS,
T_F, CADENA, CONCAT, AND, OR, NOT, MAYOR_QUE, MENOR_QUE, ELSEIF;
//------> Declaración de no terminales


// no terminales principales
non terminal inicio;
non terminal main;
non terminal instrucciones;
non terminal lista_instrucciones;
non terminal lista_cadenas;

// no terminales para declaraciones de variables
non terminal declaracion_variables;
non terminal declaracion;
non terminal declaracion_bool;
non terminal declaracion_string;
non terminal declaracion_int;
non terminal declaracion_double;
non terminal declaracion_char;

// no terminales para sentencias de control y de repeticion
non terminal estructuraif;
non terminal sentencias_control;
non terminal sentencias_repeticion;


//no terminales para asignaciones
non terminal expresiones;
non terminal expresion_aritmetica;
non terminal expresiones_numericas;
non terminal llamada_funcion;
non terminal variable;
non terminal expresion;
// otros
non terminal imprimir;
non terminal cadena;
nonterminal tipodato;
non terminal estructuraelseif;
non terminal lista_elseif;
// Precedencias de operadores aritméticos
precedence left OR;
precedence left AND;
precedence right NOT;
precedence left DOBLE_IGUAL, DISTINTO, MENOR_QUE, MENOR_IGUAL, MAYOR_QUE, MAYOR_IGUAL;
precedence left SUMA,MENOS;
precedence left MULT,DIVISION;
precedence right UMENOS;

//------> Definir Simbolo Inicial
start with inicio; 


// ------------>  Producciones  <------------




/* Definición de producción */
inicio ::= main;

main ::= VOID MAIN PARENTESIS_ABERTURA PARENTESIS_CIERRE LLAVE_ABERTURA lista_instrucciones{::};

lista_instrucciones ::= lista_instrucciones instrucciones {::}
                     | instrucciones {::}
                     ;


instrucciones ::= declaracion |
                  imprimir|
                  estructuraif
                 ;

declaracion ::= tipodato VARIABLE IGUAL expresiones PTOCOMA{:System.out.println("Se delcaro todo bien");:}| tipodato VARIABLE PTOCOMA{:System.out.println("Calma, todo sigue bien");:};

imprimir ::= PRINT PARENTESIS_ABERTURA expresiones PARENTESIS_CIERRE PTOCOMA{:System.out.println("Se imprimio algo");:};





estructuraif ::= IF PARENTESIS_ABERTURA expresiones PARENTESIS_CIERRE LLAVE_ABERTURA
                lista_instrucciones LLAVE_CIERRE|
                IF PARENTESIS_ABERTURA expresiones PARENTESIS_CIERRE LLAVE_ABERTURA
                lista_instrucciones LLAVE_CIERRE lista_elseif;
                //{:System.out.println("Termino la instruccion del if");:} ;



// expresiones para números

lista_elseif ::= lista_elseif estructuraelseif | estructuraelseif;

estructuraelseif ::= ELSEIF PARENTESIS_ABERTURA expresiones PARENTESIS_CIERRE LLAVE_ABERTURA
 lista_instrucciones LLAVE_CIERRE {:System.out.println("Llegamos al else if");:};

expresiones  ::=
  MENOS expresiones:a                      {::}%prec UMENOS
 |expresiones:a SUMA        expresiones:b     {::}
 |expresiones:a MENOS     expresiones:b     {::}
 |expresiones:a MULT        expresiones:b     {::}
 |expresiones:a DIVISION   expresiones:b     {::}
 |ENTERO:a                               {::}
 |DECIMAL: a
 |CADENA
 |VARIABLE
 |CARACTER
 |T_F
 |expresiones OR expresiones
 |expresiones AND expresiones
 |NOT expresiones{:System.out.println("HOla que hacendasad");:}
 |expresiones DOBLE_IGUAL expresiones
 |expresiones DISTINTO expresiones
 |expresiones MENOR_QUE expresiones
 |expresiones MAYOR_QUE expresiones
 |expresiones MAYOR_IGUAL expresiones
 |expresiones MENOR_IGUAL expresiones
 ;

tipodato ::= INT | STRING | DOUBLE | CHAR | BOOLEAN;

llamada_funcion ::= VARIABLE PARENTESIS_ABERTURA expresiones PARENTESIS_CIERRE;





